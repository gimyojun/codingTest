#include <string>
#include <vector>

using namespace std;

vector<string> copys;
bool visited[51];
string trgt;
int answer=50;

bool chk(string begin, string target){
    int cnt =0;
    
    for(int i=0;i<begin.length();i++){
        if(begin[i] != target[i])cnt++;
    }
    if(cnt==1)return true;
    else return false;
    
    
}
void dfs(string begin, int step){
    if(answer <= step)
        return;
    if(begin == trgt){
        answer=step;
        return;
    }
        
    
    for(int i=0;i<copys.size();i++){
        
        if(chk(begin, copys[i]) && !visited[i]){
            visited[i]=true;
            dfs(copys[i], step+1);
            visited[i]=false;
        }
    }
}

int solution(string begin, string target, vector<string> words) {
    
    trgt = target;
    copys = words;
    dfs(begin, 0);
    
    if(answer == 50)
        return 0;
    
    
    return answer;
}
